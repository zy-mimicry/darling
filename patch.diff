diff --git a/AcisDB/log.py b/AcisDB/log.py
index e26d01d..1ae52e3 100644
--- a/AcisDB/log.py
+++ b/AcisDB/log.py
@@ -34,7 +34,7 @@ LOGGING = {
         'console': {
             'level': 'DEBUG',
             'class': 'logging.StreamHandler',
-            'formatter': 'pure',
+            'formatter': 'verbose',
         },
     },
 
@@ -49,3 +49,9 @@ LOGGING = {
 
 logging.config.dictConfig(LOGGING)
 vlog = logging.getLogger('vcore')
+
+
+def beauty(obj):
+    from pprint import pformat
+    for line in pformat(obj).splitlines():
+        vlog.info(line.rstrip())
diff --git a/AcisDB/test_cookies_of_rex.py b/AcisDB/test_cookies_of_rex.py
index 40532bf..37a939e 100644
--- a/AcisDB/test_cookies_of_rex.py
+++ b/AcisDB/test_cookies_of_rex.py
@@ -1,3 +1,4 @@
+import random
 
 # 20 items
 erd_ids = [
@@ -95,6 +96,64 @@ fw_version = ['SWI9X28A_00.19.02.13','SWI9X28A_00.19.01.13','SWI9X28A_00.19.02.1
 
 test_date = ['2011-2-22', '2015-12-1', '2014-11-9']
 
+def test_get_excel_data():
+
+    ret = []
+    for e in erd_ids:
+        out = {}
+        out['PLATFORM'] = random.choice(platform)
+        out['ERD_ID'] = e
+        out['excel'] = {
+            'erd_id' : e,
+            'category' : random.choice(category),
+            'title' : random.choice(title),
+            'description' : random.choice(description),
+            'product_priority' : random.choice(product_priority),
+            'author' : random.choice(author),
+            'version' : random.choice(version),
+            'platform' : random.choice(platform),
+        }
+        ret.append(out)
+    return ret
+
+
+def test_get_jira_data():
+
+    ret = []
+    for e in erd_ids:
+        out = {}
+        out['PLATFORM'] = random.choice(platform)
+        out['ERD_ID'] = e
+        out['jira'] = {
+            'HLD' : random.choice(HLD),
+            'status' : random.choice(status),
+            'l1_jira' : random.choice(l1_jira),
+            'l2_jira' : random.choice(l2_jira),
+            'bug_jiras' : random.choice(bug_jiras),
+            'platform' : random.choice(platform),
+            'workload' : random.choice(workload),
+
+            'F_casetree' : [
+                {
+                    'case_name' : "ACIS_A_S_Test_Temp_Volt",
+                    'case_age' : random.choice(case_age),
+                    'F_report_path' : ','.join(report_path),
+                },
+                {
+                    'case_name' : "ACIS_A_S_Test_Temp_ssss",
+                    'case_age' : random.choice(case_age),
+                    'F_report_path' : ','.join(report_path),
+                },
+                {
+                    'case_name' : "ACIS_A_S_Test_Temp_abcd",
+                    'case_age' : random.choice(case_age),
+                    'F_report_path' : ','.join(report_path),
+                },
+            ],
+        }
+        ret.append(out)
+    return ret
+
 
 
 def random_gen_cookies():
@@ -108,7 +167,6 @@ def random_gen_cookies():
                     ...]
     """
 
-    import random
     out_cookies = []
 
     for e in erd_ids:
@@ -122,7 +180,7 @@ def random_gen_cookies():
             'product_priority' : random.choice(product_priority),
             'author' : random.choice(author),
             'version' : random.choice(version),
-            #'version' : '01.04',
+            'platform' : random.choice(platform),
         }
         out['jira'] = {
             'HLD' : random.choice(HLD),
diff --git a/AcisDB/views_of_rex.py b/AcisDB/views_of_rex.py
index 5bd9191..fa485f4 100644
--- a/AcisDB/views_of_rex.py
+++ b/AcisDB/views_of_rex.py
@@ -12,13 +12,81 @@ import json,time,threading,copy
 from pprint import pprint as pp
 
 from . import vcore
+from .log import beauty
+
+
+
+class ExcelProvider(vcore.Provider):
+
+    def get_data(self):
+        from .test_cookies_of_rex import test_get_excel_data
+        return test_get_excel_data()
+
+    @property
+    def formatted_rawdata(self):
+        """
+        [
+        ...
+        {
+          "PLATFORM" : "",
+          "ERD_ID" : "",
+          "excel" : {
+            'erd_id' : "",
+            'category' : "",
+            'title' : "",
+            'description' : "",
+            'product_priority' : "",
+            'author' : "",
+            'version' : "",
+            'platform' : "",
+        } ...
+        ]
+        """
+        return self.get_data()
+
+class JiraProvider(vcore.Provider):
+
+    def get_data(self):
+        from .test_cookies_of_rex import test_get_jira_data
+        return test_get_jira_data()
+
+    @property
+    def formatted_rawdata(self):
+        """
+        [
+        ...
+        {
+          "PLATFORM" : "",
+          "ERD_ID" : "",
+          "excel" : {
+            'HLD' : "",
+            'status' : "",
+            'l1_jira' : "",
+            'l2_jira' : "",
+            'bug_jiras' : "",
+            'platform' : "",
+            'workload' : "",
+
+            'F_casetree' : {
+                        ...
+                        {
+                            'case_name' : "",
+                            'case_age' : "",
+                            'F_report_path': "",
+                        },
+                        ... }
+            }
+        ...
+        ]
+        """
+        return self.get_data()
 
 class SubProvider(vcore.Provider):
 
     @property
     def formatted_rawdata(self):
         from .test_cookies_of_rex import random_gen_cookies
-        pp(random_gen_cookies())
+        #pp(random_gen_cookies())
         #assert False
         return random_gen_cookies()
 
@@ -76,7 +144,7 @@ class SubExtractor(vcore.Extractor):
                 tmp_out['F_report_path'].append(deep_jira['F_casetree'][dj]['F_report_path'])
 
             UIout.append(tmp_out)
-        pp(UIout)
+        #pp(UIout)
         return UIout
 
 def rex_jump(request):
@@ -104,6 +172,22 @@ def rex_jump(request):
         "04.60.44",
     ], extract_types = ["excel", 'jira'])
 
+    # t = SubProvider().formatted_rawdata
+    # beauty(t)
+
+    e = ExcelProvider()
+
+    print("\t:EXCEL:")
+    #beauty(e.formatted_rawdata[0])
+
+    j = JiraProvider()
+
+    print("\t:JIRA:")
+    beauty(j.formatted_rawdata[0])
+
+
+    assert False
+
     #vcore.splitter('save', provider = SubProvider())
 
     vcore.splitter('pick', extractor = ext)
